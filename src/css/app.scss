// app global css in SCSS form
@import './quasar.variables.scss';

@font-face {
  font-family: ITC;
  src: url('/src/assets/fonts/ITC-Avant-Garde-Gothic-Std-Extra-Light.otf');
  font-weight: 200; 
}
@font-face {
  font-family: ITC;
  src: url('/src/assets/fonts/ITC-Avant-Garde-Gothic-Std-Book.otf');
  font-weight: 300;
}
@font-face {
  font-family: ITC;
  src: url('/src/assets/fonts/ITC-Avan-Garde-Gothic-Std-Medium.otf');
  font-weight: 500;
}
@font-face {
  font-family: ITC;
  src: url('/src/assets/fonts/ITC-Avant-Garde-Gothic-Std-Demi.otf');
  font-weight: 600;
}
@font-face {
  font-family: ITC;
  src: url('/src/assets/fonts/ITC-Avant-Garde-Gothic-Std-Bold.otf');
  font-weight: bold;
}


/* Set the light and dark themes using CSS variables */
:root {
  --q-color-bg: #{$bg};
  --q-color-gray-light: #{$gray-light};
  --q-color-text-custom-dark: #{$text-custom-dark};
  --q-color-highlight: #{$highlight};
  --q-color-gray-dark: #{$gray-dark};
  --q-color-text-light: #{$text-light};
  --q-color-bg-primary: #{$bg-primary};
  --q-color-text-secondary: #{$text-secondary};
  --q-color-light-green: #{$light-green}; //default light green color
}

body.body--dark {
  --q-color-bg: #{$dark-bg};
  --q-color-gray-light: #{$dark-gray-light};
  --q-color-text-custom-dark: #{$text-light};
  --q-color-highlight: #{$highlight-dark};
  --q-color-gray-dark: #{$gray-dark-light};
  --q-color-text-light: #{$text-dark};
  --q-color-bg-primary: #{$dark-bg-primary};
  --q-color-text-secondary: #{$dark-text-secondary};
}

// Override css classes
.bg-custom-dark-color {
  background-color: var(--q-color-bg) !important;
}

.bg-custom-primary {
  background-color: var(--q-color-bg-primary);
}

.bg-custom-dark {
  background-color: var(--q-color-text-custom-dark);
}

.text-custom-gray-light {
  color: var(--q-color-gray-light)
}

.text-custom-dark {
  color: var(--q-color-text-custom-dark);
}

.text-custom-gray-dark {
  color: var(--q-color-gray-dark);
}

.text-custom-text-secondary {
  color: var(--q-color-text-secondary);
}

.text-default-light-green {
  color: var(--q-color-light-green);
}

// Reset css 
h1,h2,h3,h4,h5,h6,p {
  margin: 0;
  padding: 0;
}
/* Apply a default theme */
body {
  font-family: "ITC", sans-serif;
}

// Utilities classes
.fs-lg {
  font-size: 18px;
}

.fs-20 {
  font-size: 20px;
}

.fw-600 {
  font-weight: 600;
}

.text-uppercase {
  text-transform: uppercase
}

.rounded-10 {
  border-radius: 10px;
}
.rounded-15 {
  border-radius: 15px;
}

.w-full {
  width: 100%;
}

.w-90 {
  width: 90%;
}

.fs-30 {
  font-size: 30px;
}

// Header css 
.zillbase-dashboard {
  &:has(.q-layout--prevent-focus) {
    .q-header.zillbase-header {
      left: 150px;
    }

    .q-page-container {
      padding-left: 150px;
    }

    .q-header.zillbase-header + .q-drawer-container {
      .q-drawer {
        width: 150px !important;
        transform: translateX(0px) !important;
        visibility: visible;
  
        .q-btn.q-btn-item {
          position: absolute;
          right: 0;
        }
    }
    }

    .q-item.q-item-type {
      .q-item__section {
        flex-direction: row;
      }

      .nav-items {
        justify-content: center;

        .q-item__label {
          display: none;
        }
      }
    }
  }
  .q-drawer__content {
    scrollbar-width: none;
    -ms-overflow-style: none;
    ::-webkit-scrollbar {
      display: none; // Chrome, Safari, and newer versions of Edge
    }
  }
}

//Table css
.data-table.q-table__container {
  .q-table {
      thead {
          background-color: var(--q-color-bg-primary);
          color: var(--q-color-light-green);
          th {
            font-weight: 600;
            font-size: 14px;
          }
        }
        
        tbody {
          color: var(--q-color-gray-dark);
          font-weight: 300;
          tr:nth-child(even) {
            background-color: var(--q-color-bg-primary);
          }
          tr:nth-child(odd) {
            background-color: var(--q-color-bg);
          }
      }
  }
}

.editable-table.q-table__container {
  background-color: var(--q-color-bg);
  .q-table {
    tr, th, td {
      border: none;
    }
    thead {
      th {
        color: var(--q-color-gray-dark);
      }
    }
    .row-primary {
      td {
        border: 1px solid var(--q-color-highlight);
        background-color: var(--q-color-bg-primary);
        border-right: none;
        border-left: none;
      }

      td:first-of-type {
        border-top-left-radius: 8px;
        border-bottom-left-radius: 8px;
        border-left: 1px solid var(--q-color-highlight);
      }

      td:last-of-type {
        border-top-right-radius: 8px;
        border-bottom-right-radius: 8px;
        border-right: 1px solid var(--q-color-highlight);
      }
    }
    .q-field__native {
      color: var(--q-color-gray-dark);
    }
  }
}



//Table search input
.search-input {
  width: 312px;
}

//Input Css
.rounded-input {
  &.q-field--outlined {
    .q-field__control {
      border-radius: 10px;
      &::before {
        border-color: var(--q-color-highlight);
      }
    }
  }
}